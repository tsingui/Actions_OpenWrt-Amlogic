#===========================================================================================================
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# Description: Build OpenWrt using GitHub Actions
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#===========================================================================================================

name: 编译通用镜像

on:
  # push:
  #   branches:
  #     - main
  schedule:
     - cron: 0 8 * * 5
  workflow_dispatch:
  repository_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  # REPO_URL: https://github.com/immortalwrt/immortalwrt.git
  # REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_BRANCH: master
  # REPO_BRANCH: main
  # FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    # runs-on: ubuntu-latest
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: 检查服务器配置
      run: |
        echo "警告?"
        echo "若分配的服务器性能不足，插件选择过多时，建议重新运行！"
        echo "已知CPU型号性能：4-AMD 7763 > 2-8370C > 2-8272CL > 2-8171M > E5系列"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "--------------------------硬盘信息--------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # 清理多余文件，腾出磁盘空间
        docker rmi `docker images -q`
        # sudo -E apt-get remove -y --purge android* aspnetcore* azure-cli* dotnet* docker* firefox ghc* google* llvm* mysql* mssql-tools mongodb* moby* msodbcsql17* openjdk* php* powershell* snap* zulu* || true
        # sudo rm -rf /etc/apt/sources.list.d/* /etc/mysql /etc/php /usr/share/dotnet /usr/local/lib/android /opt/ghc 2>/dev/null
        sudo -E apt-get -y update
        # sudo -E apt-get -y install $(curl -fsSL git.io/depends-ubuntu-2004)
        # sudo -E apt-get -y install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
        sudo -E apt-get install -y build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libfuse-dev libncurses-dev libssl-dev \
        python3-distutils rsync subversion unzip zlib1g-dev file wget
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        # sudo mkdir -p /workdir
        # sudo chown $USER:$GROUPS /workdir
        # sudo chown $USER:$GROUPS /mnt
        echo "COMPILE_STARTINGTIME=$(date +"%Y-%m-%d-%H-%M")" >> $GITHUB_OUTPUT
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘详情："
        df -Th

    - name: Combine Disks
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 100
        root-reserve-mb: 1024


    - name: Checkout
      uses: actions/checkout@main

    - name: 克隆源码
      # working-directory: /workdir
      # working-directory: /mnt
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        # ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        # ln -sf /mnt/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_OUTPUT
        
    - name: Cache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt

    - name: 加载自定义feeds
      run: |
        # [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        cat feeds.conf.default
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘详情："
        df -Th $PWD

    - name: 编译通用镜像
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc) + 4)) thread compile"
        make -j$(($(nproc) + 4)) || make -j1 V=s || make -j1
        echo "build_tag=openwrt_armvirt_v8_$(date +"%Y-%m-%d-%H-%M")" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘详情："
        df -Th

    - name: 打包Packages文件
      id: Packages
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd $GITHUB_WORKSPACE
        tar -zcvf AllPackages.tar.gz openwrt/bin/*
        mv -f AllPackages.tar.gz openwrt/bin/targets/*/*
        # cd openwrt/bin/targets/*/*
        # tar -zcvf kmodsPackages.tar.gz packages
        # ls -al && cd && cd $GITHUB_WORKSPACE
        # cp kmodsPackages.tar.gz openwrt/bin/targets/*/*

    - name: 发布通用镜像
      uses: ncipollo/release-action@main
      if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
      with:
        tag: ${{ steps.compile.outputs.build_tag }}
        artifacts: "openwrt/bin/targets/*/*/*.tar.gz"
        allowUpdates: true
        token: ${{ secrets.GH_TOKEN }}
        body: |
          ### **适用于Amlogic平台Image**
          * **固件信息：**
          默认IP: `10.57.21.2`
          默认用户名: `root`
          默认密码: `空`
